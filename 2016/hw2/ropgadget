Gadgets information
============================================================
0x00000000004005db : adc al, 0xdc ; add rbx, 1 ; cmp rbx, rbp ; jne 0x4005fd ; mov rbx, qword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x000000000040052d : adc bh, byte ptr [rax] ; test rax, rax ; je 0x400551 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x00000000004005ef : adc byte ptr [rbx + rcx*4 + 0x64], cl ; and al, 0x18 ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400570 : add al, ch ; mov edx, 0xc9fffffe ; ret
0x000000000040040d : add al, ch ; or eax, 0x48000002 ; add esp, 8 ; ret
0x000000000040042f : add bh, bh ; and eax, 0x200bca ; push 0 ; jmp 0x400433
0x000000000040053d : add bh, bh ; loopne 0x4005a2 ; ret
0x000000000040060f : add bl, dh ; ret
0x0000000000400500 : add byte ptr [rax + 0x39], cl ; fdiv dword ptr [rdx - 0x1e] ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004004f9 : add byte ptr [rax - 0x75], cl ; add eax, 0x200b2f ; cmp rax, rbx ; jb 0x400502 ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400496 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000040051f : add byte ptr [rax - 0x7d], cl ; cmp eax, 0x200920 ; add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; je 0x40055f ; mov eax, 0 ; test rax, rax ; je 0x40055f ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x00000000004004cd : add byte ptr [rax - 0x7f], cl ; jmp 0x400550
0x000000000040060b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000040056e : add byte ptr [rax], al ; add al, ch ; mov edx, 0xc9fffffe ; ret
0x000000000040060d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040051d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; cmp eax, 0x200920 ; add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; je 0x400561 ; mov eax, 0 ; test rax, rax ; je 0x400561 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x000000000040051b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; cmp eax, 0x200920 ; add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; je 0x400563 ; mov eax, 0 ; test rax, rax ; je 0x400563 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x000000000040051c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x400562 ; mov eax, 0 ; test rax, rax ; je 0x400562 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400437 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x40042b
0x000000000040060c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040052f : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40054f ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400411 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040051e : add byte ptr [rax], al ; cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x400560 ; mov eax, 0 ; test rax, rax ; je 0x400560 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400439 : add byte ptr [rax], al ; jmp 0x400429
0x0000000000400526 : add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; je 0x400558 ; mov eax, 0 ; test rax, rax ; je 0x400558 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x000000000040060e : add byte ptr [rax], al ; ret
0x000000000040063e : add byte ptr [rax], al ; sub rbx, 8 ; call rax
0x0000000000400531 : add byte ptr [rax], al ; test rax, rax ; je 0x40054d ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x000000000040063d : add byte ptr [rax], r8b ; sub rbx, 8 ; call rax
0x0000000000400527 : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; je 0x400557 ; mov eax, 0 ; test rax, rax ; je 0x400557 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x00000000004005cf : add byte ptr [rcx + rcx*4 - 6], cl ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x000000000040050b : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040042e : add dil, dil ; and eax, 0x200bca ; push 0 ; jmp 0x400434
0x00000000004005e0 : add dword ptr [rax + 0x39], ecx ; jmp 0x400682
0x00000000004005e0 : add dword ptr [rax + 0x39], ecx ; jmp 0x40068b
0x000000000040040b : add dword ptr [rax], eax ; add al, ch ; or eax, 0x48000002 ; add esp, 8 ; ret
0x000000000040062b : add eax, 0x2007f8 ; cmp rax, 0xff ; je 0x400668 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x00000000004004fc : add eax, 0x200b2f ; cmp rax, rbx ; jb 0x4004ff ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400492 : add eax, 0x200b49 ; test rax, rax ; je 0x4004a8 ; call rax
0x00000000004005de : add ebx, 1 ; cmp rbx, rbp ; jne 0x4005fa ; mov rbx, qword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400648 : add ecx, dword ptr [rax - 0x7d] ; clc ; push qword ptr [rbp - 0xf] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400605 : add esp, 0x38 ; ret
0x000000000040050e : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400414 : add esp, 8 ; ret
0x00000000004005dd : add rbx, 1 ; cmp rbx, rbp ; jne 0x4005fb ; mov rbx, qword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400604 : add rsp, 0x38 ; ret
0x000000000040050d : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add rsp, 8 ; ret
0x00000000004005ee : and al, 0x10 ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005f3 : and al, 0x18 ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005f8 : and al, 0x20 ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005fd : and al, 0x28 ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400602 : and al, 0x30 ; add rsp, 0x38 ; ret
0x00000000004005e9 : and al, 8 ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400525 : and byte ptr [rax], al ; add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; je 0x400559 ; mov eax, 0 ; test rax, rax ; je 0x400559 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x000000000040062e : and byte ptr [rax], al ; cmp rax, 0xff ; je 0x400665 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x00000000004004ff : and byte ptr [rax], al ; cmp rax, rbx ; jb 0x4004fc ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400434 : and byte ptr [rax], al ; push 0 ; jmp 0x40042e
0x0000000000400495 : and byte ptr [rax], al ; test rax, rax ; je 0x4004a5 ; call rax
0x00000000004005f9 : and byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x28 ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400523 : and byte ptr [rcx], cl ; and byte ptr [rax], al ; add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; je 0x40055b ; mov eax, 0 ; test rax, rax ; je 0x40055b ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400431 : and eax, 0x200bca ; push 0 ; jmp 0x400431
0x000000000040059c : call 0x24b48f30
0x00000000004005d9 : call qword ptr [r12 + rbx*8]
0x00000000004005da : call qword ptr [rsp + rbx*8]
0x000000000040049c : call rax
0x000000000040064b : clc ; push qword ptr [rbp - 0xf] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004005d2 : cli ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x0000000000400607 : cmp bl, al ; nop dword ptr [rax] ; ret
0x0000000000400521 : cmp dword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x40055d ; mov eax, 0 ; test rax, rax ; je 0x40055d ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400522 : cmp eax, 0x200920 ; add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; je 0x40055c ; mov eax, 0 ; test rax, rax ; je 0x40055c ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400631 : cmp eax, 0xff ; je 0x400662 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040064a : cmp eax, 0xff ; jne 0x40064b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400502 : cmp eax, ebx ; jb 0x4004f9 ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004005e2 : cmp ebx, ebp ; jne 0x4005f6 ; mov rbx, qword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400520 : cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x40055e ; mov eax, 0 ; test rax, rax ; je 0x40055e ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400630 : cmp rax, 0xff ; je 0x400663 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400649 : cmp rax, 0xff ; jne 0x40064c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400501 : cmp rax, rbx ; jb 0x4004fa ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004005e1 : cmp rbx, rbp ; jne 0x4005f7 ; mov rbx, qword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005c4 : dec dword ptr [rax - 0x7b] ; in eax, dx ; je 0x400601 ; xor ebx, ebx ; nop dword ptr [rax] ; mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x0000000000400575 : dec ecx ; ret
0x0000000000400503 : fdiv dword ptr [rdx - 0x1e] ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004005dc : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400489 : hlt ; nop ; nop ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x200b49] ; test rax, rax ; je 0x4004b1 ; call rax
0x0000000000400627 : in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x2007f8 ; cmp rax, 0xff ; je 0x40066c ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040048e : in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x200b49 ; test rax, rax ; je 0x4004ac ; call rax
0x0000000000400623 : in eax, 0x53 ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400670 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040052b : in eax, 0x74 ; adc bh, byte ptr [rax] ; test rax, rax ; je 0x400553 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x00000000004005c7 : in eax, dx ; je 0x4005fe ; xor ebx, ebx ; nop dword ptr [rax] ; mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x00000000004005ed : insb byte ptr [rdi], dx ; and al, 0x10 ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005f7 : insb byte ptr [rdi], dx ; and al, 0x20 ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x000000000040064e : int1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400504 : jb 0x4004f7 ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040049a : je 0x4004a0 ; call rax
0x0000000000400536 : je 0x400548 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x000000000040052c : je 0x400552 ; mov eax, 0 ; test rax, rax ; je 0x400552 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x00000000004005c8 : je 0x4005fd ; xor ebx, ebx ; nop dword ptr [rax] ; mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x00000000004005fc : je 0x40062e ; sub byte ptr [rbx + rcx*4 + 0x7c], cl ; and al, 0x30 ; add rsp, 0x38 ; ret
0x0000000000400634 : je 0x40065f ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040043b : jmp 0x400427
0x00000000004004d0 : jmp 0x40054d
0x00000000004005e3 : jmp 0x40067f
0x00000000004005e3 : jmp 0x400688
0x00000000004005e3 : jmp 0x4006bb
0x000000000040053e : jmp rax
0x00000000004005e4 : jne 0x4005f4 ; mov rbx, qword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x000000000040064d : jne 0x400648 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400576 : leave ; ret
0x000000000040053f : loopne 0x4005a0 ; ret
0x0000000000400506 : mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040052e : mov eax, 0 ; test rax, rax ; je 0x400550 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400647 : mov eax, dword ptr [rbx] ; cmp rax, 0xff ; jne 0x40064e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040062a : mov eax, dword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400669 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x00000000004004fb : mov eax, dword ptr [rip + 0x200b2f] ; cmp rax, rbx ; jb 0x400500 ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400491 : mov eax, dword ptr [rip + 0x200b49] ; test rax, rax ; je 0x4004a9 ; call rax
0x00000000004005ec : mov ebp, dword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005f6 : mov ebp, dword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x000000000040052a : mov ebp, esp ; je 0x400554 ; mov eax, 0 ; test rax, rax ; je 0x400554 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400622 : mov ebp, esp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400671 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400636 : mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x00000000004005e7 : mov ebx, dword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400539 : mov edi, 0x600e48 ; jmp rax
0x0000000000400600 : mov edi, dword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005d7 : mov edi, ebp ; call qword ptr [r12 + rbx*8]
0x00000000004005d6 : mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x0000000000400572 : mov edx, 0xc9fffffe ; ret
0x00000000004005d1 : mov edx, edi ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x00000000004005fb : mov esi, dword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005d4 : mov esi, esi ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x00000000004005f1 : mov esp, dword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005f0 : mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005f5 : mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005fa : mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005ff : mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400646 : mov rax, qword ptr [rbx] ; cmp rax, 0xff ; jne 0x40064f ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400629 : mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40066a ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x00000000004004fa : mov rax, qword ptr [rip + 0x200b2f] ; cmp rax, rbx ; jb 0x400501 ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400490 : mov rax, qword ptr [rip + 0x200b49] ; test rax, rax ; je 0x4004aa ; call rax
0x00000000004005eb : mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400529 : mov rbp, rsp ; je 0x400555 ; mov eax, 0 ; test rax, rax ; je 0x400555 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400621 : mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400672 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x00000000004005e6 : mov rbx, qword ptr [rsp + 8] ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000000004005d0 : mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x00000000004005d3 : mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x00000000004004c1 : movabs r11, 0x62058b4800600e40 ; or esp, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; jmp 0x40055c
0x0000000000400612 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400681 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400613 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400680 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400614 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40067f ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400615 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40067e ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400616 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40067d ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400617 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40067c ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400618 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40067b ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400619 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40067a ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040061a : nop ; nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400679 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040061b : nop ; nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400678 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040061c : nop ; nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400677 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040061d : nop ; nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400676 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040061e : nop ; nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400675 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040048a : nop ; nop ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x200b49] ; test rax, rax ; je 0x4004b0 ; call rax
0x000000000040061f : nop ; push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400674 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040048b : nop ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x200b49] ; test rax, rax ; je 0x4004af ; call rax
0x0000000000400518 : nop dword ptr [rax + rax] ; cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x400566 ; mov eax, 0 ; test rax, rax ; je 0x400566 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x000000000040063b : nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x00000000004005cc : nop dword ptr [rax] ; mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x0000000000400609 : nop dword ptr [rax] ; ret
0x0000000000400517 : nop dword ptr cs:[rax + rax] ; cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x400567 ; mov eax, 0 ; test rax, rax ; je 0x400567 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400516 : nop word ptr cs:[rax + rax] ; cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x400568 ; mov eax, 0 ; test rax, rax ; je 0x400568 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400515 : nop word ptr cs:[rax + rax] ; cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x400569 ; mov eax, 0 ; test rax, rax ; je 0x400569 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400514 : nop word ptr cs:[rax + rax] ; cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x40056a ; mov eax, 0 ; test rax, rax ; je 0x40056a ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400643 : or bh, bh ; ror byte ptr [rax - 0x75], 1 ; add ecx, dword ptr [rax - 0x7d] ; clc ; push qword ptr [rbp - 0xf] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400628 : or byte ptr [rax - 0x75], cl ; add eax, 0x2007f8 ; cmp rax, 0xff ; je 0x40066b ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040048f : or byte ptr [rax - 0x75], cl ; add eax, 0x200b49 ; test rax, rax ; je 0x4004ab ; call rax
0x00000000004005ea : or byte ptr [rax - 0x75], cl ; insb byte ptr [rdi], dx ; and al, 0x10 ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400510 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000400524 : or dword ptr [rax], esp ; add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; je 0x40055a ; mov eax, 0 ; test rax, rax ; je 0x40055a ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x000000000040040f : or eax, 0x48000002 ; add esp, 8 ; ret
0x00000000004004fe : or esp, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; fdiv dword ptr [rdx - 0x1e] ; mov byte ptr [rip + 0x200b1b], 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400494 : or esp, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x00000000004004cb : or esp, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; jmp 0x400552
0x0000000000400509 : or esp, dword ptr [rax] ; add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400493 : or rsp, qword ptr [r8] ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x00000000004005d8 : out dx, eax ; call qword ptr [r12 + rbx*8]
0x0000000000400538 : pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400512 : pop rbp ; ret
0x0000000000400511 : pop rbx ; pop rbp ; ret
0x00000000004005e8 : pop rsp ; and al, 8 ; mov rbp, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 0x18] ; mov r13, qword ptr [rsp + 0x20] ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400436 : push 0 ; jmp 0x40042c
0x000000000040064c : push qword ptr [rbp - 0xf] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400528 : push rbp ; mov rbp, rsp ; je 0x400556 ; mov eax, 0 ; test rax, rax ; je 0x400556 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x0000000000400620 : push rbp ; mov rbp, rsp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x400673 ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400624 : push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40066f ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x0000000000400488 : push rsp ; nop ; nop ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x200b49] ; test rax, rax ; je 0x4004b2 ; call rax
0x0000000000400417 : ret
0x0000000000400442 : ret 0x200b
0x0000000000400297 : ret 1
0x0000000000400645 : ror byte ptr [rax - 0x75], 1 ; add ecx, dword ptr [rax - 0x7d] ; clc ; push qword ptr [rbp - 0xf] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400499 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x00000000004005f4 : sbb byte ptr [rbx + rcx*4 + 0x6c], cl ; and al, 0x20 ; mov r14, qword ptr [rsp + 0x28] ; mov r15, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000000000400635 : sbb dword ptr [rbx + 0x600e28], edi ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x00000000004005fe : sub byte ptr [rbx + rcx*4 + 0x7c], cl ; and al, 0x30 ; add rsp, 0x38 ; ret
0x0000000000400641 : sub ebx, 8 ; call rax
0x0000000000400626 : sub esp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40066d ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040048d : sub esp, 8 ; mov rax, qword ptr [rip + 0x200b49] ; test rax, rax ; je 0x4004ad ; call rax
0x0000000000400640 : sub rbx, 8 ; call rax
0x0000000000400625 : sub rsp, 8 ; mov rax, qword ptr [rip + 0x2007f8] ; cmp rax, 0xff ; je 0x40066e ; mov ebx, 0x600e28 ; nop dword ptr [rax + rax] ; sub rbx, 8 ; call rax
0x000000000040048c : sub rsp, 8 ; mov rax, qword ptr [rip + 0x200b49] ; test rax, rax ; je 0x4004ae ; call rax
0x000000000040051a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmp qword ptr [rip + 0x200920], 0 ; push rbp ; mov rbp, rsp ; je 0x400564 ; mov eax, 0 ; test rax, rax ; je 0x400564 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x00000000004005d5 : test byte ptr [rcx + rcx*4 - 0x11], 0x41 ; call qword ptr [rsp + rbx*8]
0x0000000000400498 : test eax, eax ; je 0x4004a2 ; call rax
0x0000000000400534 : test eax, eax ; je 0x40054a ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x00000000004005c6 : test ebp, ebp ; je 0x4005ff ; xor ebx, ebx ; nop dword ptr [rax] ; mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x0000000000400497 : test rax, rax ; je 0x4004a3 ; call rax
0x0000000000400533 : test rax, rax ; je 0x40054b ; pop rbp ; mov edi, 0x600e48 ; jmp rax
0x00000000004005c5 : test rbp, rbp ; je 0x400600 ; xor ebx, ebx ; nop dword ptr [rax] ; mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
0x00000000004005ca : xor ebx, ebx ; nop dword ptr [rax] ; mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]

Unique gadgets found: 217
