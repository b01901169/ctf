from pwn import *
from Crypto.PublicKey import RSA
from Crypto.Util import asn1
from base64 import b64decode
import time
import signal
import primefac

class TimeoutError(Exception):
  pass

def handler(signum, frame):
  raise TimeoutError()

while 1:
  r = remote('66.172.27.77', 54979)

  junk = r.recv(2048)
  junk = r.recv(2048)
  print junk
  
  time.sleep(1)

  r.sendline('e')
  data = r.recv(2048)
  print data
  enc = data.split()[2]

  r.sendline('p')
  
  data = r.recv(2048)
  print data
  lines = data.split('\n')
  
  key64 = ''.join([x for x in lines[2:-2]])
  print key64
  
  keyDER = b64decode(key64)
  
  keyPub = RSA.importKey(keyDER)
  print 'n:', keyPub.n
  print 'e:', keyPub.e

  n = keyPub.n
  e = keyPub.e

  signal.signal(signal.SIGALRM, handler)
  signal.alarm(10)
  try:
    p = primefac.multifactor(n)
    break
  except TimeoutError as exc:
    print exc
    print 'continue'
    r.close()
    continue
  

print 'n:', n
print 'e:', e
print 'p:', p
print 'enc:', enc
r.interactive()

